{"version":3,"sources":["api/ajax.js","api/loginApi.js","api/bossApi.js","api/adminApi.js","api/guardApi.js","pages/login/index.jsx","components/left-nav/index.jsx","components/header/index.jsx","config/bossConfig.js","pages/bossArea/index.jsx","pages/bossAccount/index.jsx","components/chart/index.jsx","config/publicConfig.js","pages/bossBill/index.jsx","pages/boss/index.jsx","config/adminConfig.js","pages/adminParking/index.jsx","pages/adminAccount/index.jsx","pages/adminBill/index.jsx","pages/admin/index.jsx","pages/guardStall/index.jsx","config/guardConfig.js","pages/guardLog/index.jsx","pages/guard/index.jsx","App.js","index.js"],"names":["ajax","url","data","method","responceType","contentType","token","sessionStorage","getItem","Promise","resolve","reject","promise","axios","get","params","responseType","headers","post","put","delete","then","res","catch","err","console","log","msg","reqLogin","reqCreateArea","reqCreateAreaAdmin","reqGetAreaPage","reqGetAreaAdmin","reqGetAreaDayAmount","reqCreatePark","reqCreateParkAdmin","reqGetParkAdmin","reqGetAreaParkPage","reqGetParkDayAmount","reqFreezePark","reqUnfreezePark","reqCreatePlace","reqGetPlacePage","reqGetDayRecords","Login","handleLogin","values","a","setItem","code","message","success","props","history","push","warn","className","name","initialValues","remember","onFinish","this","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Component","LeftNav","menuData","list","theme","mode","defaultSelectedKeys","map","item","icon","to","path","key","Header","confirm","HeaderTop","state","isModalVisible","showConfirm","title","ExclamationCircleOutlined","okText","cancelText","onOk","onCancel","warning","toggle","collapsed","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","LogoutOutlined","style","PictureOutlined","BarChartOutlined","bossAreaColumns","dataIndex","width","align","ellipsis","render","text","record","EditOutlined","Search","BossArea","current","defaultPageSize","pageSize","visible","isLoading","tableData","total","UNSAFE_componentWillMount","handlePageChange","componentWillUnmount","setState","callback","onSearch","value","showModal","handleOk","handleCancel","info","page","size","PlusOutlined","centered","footer","closable","labelCol","span","wrapperCol","autoComplete","label","offset","loading","marginLeft","columns","dataSource","rowKey","arrayId","pagination","defaultCurrent","onChange","BossAccount","areaId","areaName","areaList","adminList","getAreaAdmin","handleChangeArea","index","bind","Password","username","color","status","shape","danger","MinusOutlined","Chart","option","xAxis","xData","yAxis","series","yData","id","notMerge","lazyUpdate","getSevenDay","array","i","getDay","doHandleMonth","month","m","toString","length","day","today","Date","targetday_milliseconds","getTime","setTime","tYear","getFullYear","tMonth","getMonth","tDate","getDate","BossBill","getAreaDayAmount","dates","handleBillList","x","Array","y","dayTime","slice","amount","Sider","Content","Boss","trigger","collapsible","component","from","CarOutlined","adminParkColumns","filters","AdminParking","parkId","parkName","parkList","guardList","getParkDayAmount","Admin","AdminAccount","AdminBill","GuardStall","placeList","freezePark","unfreezePark","UnlockOutlined","marginRight","placeNumber","lng","lat","isOccupied","ContainerOutlined","guardLogColumns","GuardLog","date","handleDateChange","dateString","defaultValue","moment","openId","Guard","App","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.87891796.chunk.js","sourcesContent":["// 发送异步ajax请求的函数模块，返回Promise对象\r\n// 封装axios\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function ajax(url, data = {}, method = 'GET',responceType='',contentType='application/json') {\r\n\r\n    let token = sessionStorage.getItem(\"token\")? sessionStorage.getItem(\"token\") : '';\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let promise;\r\n        // GET\r\n        if (method === 'GET') {\r\n            promise = axios.get(url, {\r\n                params:data,\r\n                responseType: responceType,\r\n                headers: {\r\n                    \"token\": token\r\n                }\r\n            })\r\n        }\r\n\r\n        // POST\r\n        if (method === 'POST') {\r\n            promise = axios.post(url,data,{\r\n                headers: {\r\n                    \"token\": token,\r\n                    \"Content-Type\": contentType\r\n                }\r\n            })\r\n        }\r\n\r\n        // PUT\r\n        if(method === 'PUT') {\r\n            promise = axios.put(url,null,{\r\n                headers: {\r\n                    \"token\": token\r\n                }\r\n            })\r\n        }\r\n\r\n        // DELETE \r\n        if(method === 'DELETE') {\r\n            promise = axios.delete(url, {\r\n                params:data,\r\n                headers: {\r\n                    \"token\": token\r\n                }\r\n            })\r\n        }\r\n\r\n        promise.then(res => {\r\n            resolve(res.data)\r\n        }).catch(err => {\r\n            //message.error(err)\r\n            console.log(err.msg)\r\n        })\r\n\r\n    })\r\n\r\n}","import ajax from './ajax'\r\n\r\nexport const reqLogin = (data) => ajax('/auth/adminLogin', data, 'POST')","import ajax from './ajax'\r\n\r\nexport const reqCreateArea = (data) => ajax('/boss/createArea', data, 'POST');\r\n\r\nexport const reqCreateAreaAdmin = (data) => ajax('/boss/createAreaAdmin', data, 'POST');\r\n\r\nexport const reqGetAreaPage = (params) => ajax('/boss/getAreaPage', params, 'GET');\r\n\r\nexport const reqGetAreaAdmin = (params) => ajax('/boss/getAreaAdmin', params, 'GET')\r\n\r\nexport const reqGetAreaDayAmount = (data) => ajax('/boss/getAreaDayAmount', data, 'POST')","import ajax from './ajax'\r\n\r\nexport const reqCreatePark = (data) => ajax('/area/createPark', data, 'POST');\r\n\r\nexport const reqCreateParkAdmin = (data) => ajax('/area/createParkAdmin', data, 'POST');\r\n\r\nexport const reqGetParkAdmin = (params) => ajax('/area/getParkAdmin', params, 'GET');\r\n\r\nexport const reqGetAreaParkPage = (params) => ajax('/area/getAreaParkPage', params, 'GET');\r\n\r\nexport const reqGetParkDayAmount = (data) => ajax('/area/getParkDayAmount', data, 'POST');\r\n\r\n\r\n\r\n\r\n","import ajax from './ajax'\r\n\r\nexport const reqFreezePark = () => ajax('/park/freezePark', {}, 'PUT');\r\n\r\nexport const reqUnfreezePark = () => ajax('/park/unfreezePark', {}, 'PUT');\r\n\r\nexport const reqCreatePlace = (data) => ajax('/park/createPlace', data, 'POST');\r\n\r\nexport const reqGetPlacePage = (params) => ajax('/park/getPlacePage', params, 'GET');\r\n\r\nexport const reqGetDayRecords = (data) => ajax('/park/getDayRecords', data, 'POST');\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './index.less';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { reqLogin } from '../../api'\r\n\r\nexport default class Login extends Component {\r\n\r\n    handleLogin = async (values) => {\r\n        let res = await reqLogin(values)\r\n        sessionStorage.setItem('token', res.data.token);\r\n        if(res.code===1) {message.success('登陆成功');this.props.history.push('/boss')}\r\n        else if(res.code===2) {message.success('登陆成功');this.props.history.push('/admin')}\r\n        else if(res.code===3) {message.success('登陆成功');this.props.history.push('/guard')}\r\n        else message.warn(res.msg)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"header\">\r\n                    车辆管理平台\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h2>管理员登陆</h2>\r\n                    <Form\r\n                        name=\"login_form\"\r\n                        className=\"login-form\"\r\n                        initialValues={{ remember: false }}\r\n                        onFinish={this.handleLogin}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: '请输入用户名！' }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: '请输入密码！' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n                       \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登陆\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// 左侧导航\r\n\r\nimport React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Menu } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class LeftNav extends Component {\r\n\r\n    menuData = this.props.list;\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"leftNav\">\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    {\r\n                        this.menuData.map((item) => {\r\n                            return <Menu.Item key={item.key} icon={item.icon}>\r\n                                <Link to={item.path}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Layout, Modal, Message } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    LogoutOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport './index.less'\r\n\r\nconst { Header } = Layout;\r\nconst { confirm } = Modal;\r\n\r\n\r\nexport default class HeaderTop extends Component {\r\n\r\n    state = {\r\n        isModalVisible: false\r\n    }\r\n\r\n    showConfirm = () => {\r\n        confirm({\r\n            title: '您确定要登出吗？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.props.history.push('/login')\r\n                Message.success('登出成功！')\r\n            },\r\n            onCancel() {\r\n                Message.warning('取消登出');\r\n            },\r\n        });\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggle();\r\n    }\r\n\r\n    render() {\r\n\r\n        const collapsed = this.props.collapsed\r\n\r\n        return (\r\n            <Header className=\"site-layout-header\">\r\n                {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                    className: 'trigger',\r\n                    onClick: this.toggle,\r\n                })}\r\n                <LogoutOutlined onClick={this.showConfirm} style={{ 'cursor': 'pointer' }} />\r\n            </Header>\r\n\r\n        )\r\n    }\r\n}\r\n","import {\r\n    PictureOutlined,\r\n    UserOutlined,\r\n    BarChartOutlined,\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst menuData = [\r\n    {\r\n        key: 1,\r\n        icon: <PictureOutlined />,\r\n        name: \"区域管理\",\r\n        path: '/boss/area'\r\n    },\r\n    {\r\n        key: 2,\r\n        icon: <UserOutlined />,\r\n        name: \"账号管理\",\r\n        path: '/boss/account'\r\n    },\r\n    {\r\n        key: 3,\r\n        icon: <BarChartOutlined />,\r\n        name: \"流水账单\",\r\n        path: '/boss/bill'\r\n    },\r\n]\r\n\r\nconst bossAreaColumns = [\r\n    {\r\n        title: '区域编号',\r\n        dataIndex: 'areaId',\r\n        key: 'areaId',\r\n        width: '160px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '区域名称',\r\n        dataIndex: 'areaName',\r\n        key: 'areaName',\r\n        width: '240px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '区域管理员',\r\n        dataIndex: 'areaUser',\r\n        key: 'areaUser',\r\n        width: '200px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '编辑资料',\r\n        key: 'action',\r\n        width: '200px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n        render: (text, record) => (\r\n            <EditOutlined />\r\n        ),\r\n      },\r\n]\r\n\r\n \r\n\r\nexport { \r\n    menuData,\r\n    bossAreaColumns,\r\n    \r\n };","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Table, Input, Button, Modal, message, Form } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {\r\n    reqCreateArea,\r\n    reqGetAreaPage,\r\n} from '../../api/index'\r\n\r\nimport { bossAreaColumns } from '../../config/bossConfig'\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class BossArea extends Component {\r\n\r\n    state = {\r\n        current: 1,\r\n        defaultPageSize: 7,\r\n        pageSize: 7,\r\n        visible: false,\r\n        isLoading: false,\r\n        tableData: [],\r\n        total: 0\r\n    }\r\n\r\n    // 获取区域列表\r\n    UNSAFE_componentWillMount = () => {\r\n        this.handlePageChange()\r\n        \r\n    }\r\n\r\n    //todo 解决bug的 不需要就删掉\r\n    componentWillUnmount = () => {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n\r\n    //todo 搜索\r\n    onSearch = async (value) => {\r\n        // console.log(value)\r\n       \r\n    }\r\n\r\n    // 添加区域\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    handleOk = async (values) => {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n\r\n        let res = await reqCreateArea(values);\r\n        if(res.msg === 'success') {\r\n            this.setState({\r\n                isLoading: false,\r\n                visible: false\r\n            })\r\n            message.success('添加成功！')\r\n            this.handlePageChange()\r\n        }else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            message.warn(res.msg)\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            isLoading: false\r\n        })\r\n        message.info('取消添加。')\r\n    }\r\n\r\n    // 分页\r\n    handlePageChange = async (page=1, pageSize=7) => {\r\n        const data = {\r\n            page: page,\r\n            size: pageSize\r\n        }\r\n        let res = await reqGetAreaPage(data);\r\n        this.setState({\r\n            current: page,\r\n            tableData: res.data.data,\r\n            total: res.data.total\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bossArea\">\r\n                <div className=\"topBox\">\r\n                    <Button onClick={this.showModal} icon={<PlusOutlined />}>添加区域</Button>\r\n                    <Search placeholder=\"请输入区域名或者ID\" onSearch={this.onSearch} style={{ width: 200 }} />\r\n                    <Modal\r\n                        title=\"添加区域\"\r\n                        visible={this.state.visible}\r\n                        centered={true}\r\n                        footer={null}\r\n                        closable={false}\r\n                    >\r\n                        <Form\r\n                            name=\"areaForm\"\r\n                            labelCol={{ span: 6 }}\r\n                            wrapperCol={{ span: 16 }}\r\n                            initialValues={{ remember: false }}\r\n                            onFinish={this.handleOk}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"区域编号\"\r\n                                name=\"areaId\"\r\n                                rules={[{ required: true, message: '请输入区域编号！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"区域名称\"\r\n                                name=\"areaName\"\r\n                                rules={[{ required: true, message: '请输入区域名称！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button onClick={this.handleCancel}>\r\n                                    取消\r\n                                </Button>\r\n                                <Button type=\"primary\" loading={this.state.isLoading} htmlType=\"submit\" style={{marginLeft: '20px'}}>\r\n                                    添加\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n                <Table\r\n                    columns={bossAreaColumns}\r\n                    dataSource={this.state.tableData}\r\n                    rowKey={columns => columns.arrayId} \r\n                    pagination={{\r\n                        current: this.state.current,\r\n                        total: this.state.total,\r\n                        defaultCurrent: 1,\r\n                        defaultPageSize: this.state.defaultPageSize,\r\n                        pageSize: this.state.pageSize,\r\n                        onChange: this.handlePageChange\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Button, Input, Form, Modal, message } from 'antd'\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons'\r\nimport {\r\n    reqGetAreaPage,\r\n    reqCreateAreaAdmin,\r\n    reqGetAreaAdmin\r\n} from '../../api/index'\r\n\r\nexport default class BossAccount extends Component {\r\n\r\n    state = {\r\n        areaId: \"0\",\r\n        areaName: \"\",\r\n        visible: false,\r\n        isLoading: false,\r\n        areaList: [],\r\n        adminList: []\r\n    }\r\n\r\n    // 获取区域列表\r\n    UNSAFE_componentWillMount = async () => {\r\n        return new Promise(async resolve=>{\r\n            let res = await reqGetAreaPage({ 'page': 1, 'size': 1000 });\r\n            let list = await reqGetAreaAdmin({ 'areaId': res.data.data[0].areaId })\r\n            this.setState({\r\n                areaList: res.data.data,\r\n                areaId: res.data.data[0].areaId,\r\n                adminList: list.data\r\n            })\r\n        })\r\n    }\r\n   \r\n    // 获取区域管理员\r\n    getAreaAdmin = async () => {\r\n        let res = await reqGetAreaAdmin({ 'areaId': this.state.areaId })\r\n        this.setState({\r\n            adminList: res.data\r\n        })\r\n    }\r\n\r\n    // 选择区域\r\n    handleChangeArea = (item) => {\r\n        this.setState({\r\n            areaId:item.areaId\r\n        }, () => {\r\n            this.getAreaAdmin()\r\n        })\r\n    }\r\n\r\n    // 添加区域管理员\r\n    showModal = () => {\r\n        this.setState({\r\n            visible:true\r\n        })\r\n    }\r\n\r\n    handleOk = async  (values) => {\r\n        this.setState({ isLoading: true})\r\n        let res = await reqCreateAreaAdmin(values)\r\n        if(res.msg === 'success') {\r\n            this.setState({\r\n                isLoading: false,\r\n                visible: false\r\n            })\r\n            message.success('添加管理员成功！')\r\n            this.getAreaAdmin();\r\n        }else{\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            message.warn(res.msg)\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            isLoading: false\r\n        })\r\n        message.info('取消添加。')\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bossAccount\">\r\n                <div className=\"itemBox leftBox\">\r\n                    {\r\n                        this.state.areaList.map((item,index) => {\r\n                            return <div onClick={this.handleChangeArea.bind(this, item)} key={index} className={item.areaId === this.state.areaId ? \"areaItem areaItemClick\" : \"areaItem\"}>\r\n                                <p>区域名称：{item.areaName}</p>\r\n                                <p>区域编号：{item.areaId}</p>\r\n                            </div>\r\n                        }, this)\r\n                    }\r\n                </div>\r\n                <div className=\"itemBox rightBox\">\r\n                    <Button onClick={this.showModal} className=\"addBtn\" icon={<PlusOutlined />}>添加区域管理员</Button>\r\n                    <Modal\r\n                        title=\"添加区域管理员\"\r\n                        visible={this.state.visible}\r\n                        centered={true}\r\n                        footer={null}\r\n                        closable={false}\r\n                    >\r\n                        <Form\r\n                            name=\"areaAdminForm\"\r\n                            labelCol={{ span: 6 }}\r\n                            wrapperCol={{ span: 16 }}\r\n                            initialValues={{ remember: false }}\r\n                            onFinish={this.handleOk}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"区域编号\"\r\n                                name=\"areaId\"\r\n                                rules={[{ required: true, message: '请输入区域编号！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"管理员名称\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: '请输入用户名！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"密码\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: '请输入初始密码！' }]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button onClick={this.handleCancel}>\r\n                                    取消\r\n                                </Button>\r\n                                <Button type=\"primary\" loading={this.state.isLoading} htmlType=\"submit\" style={{ marginLeft: '20px' }}>\r\n                                    添加\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <div className=\"adminBox\">\r\n                        {\r\n                            this.state.adminList.map((item,index) => {\r\n                                return <div className=\"adminItem\" key={index}>\r\n                                    <span className=\"adminSpan\">管理员：{item.username}</span>\r\n                                    <span style={{color: item.status===0?'#ff4e50':'#648cb9'}}>{item.status===0? '已冻结':'正常'}</span>\r\n                                    <Button shape=\"circle\" danger size=\"small\" icon={<MinusOutlined />} />\r\n                                </div>\r\n                            },this)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactEcharts from 'echarts-for-react';\r\n// import echarts from 'echarts';\r\n\r\nexport default class Chart extends Component {\r\n\r\n    \r\n\r\n    option = {\r\n        title: {\r\n            text: '区域近七日流水'\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: this.props.xData\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [{\r\n            data: this.props.yData,\r\n            type: 'bar'\r\n        }]\r\n    };\r\n\r\n    render() {\r\n\r\n        let option = {\r\n            title: {\r\n                text: '区域近七日流水'\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                data: this.props.xData\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: this.props.yData,\r\n                type: 'bar'\r\n            }]\r\n        };\r\n\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactEcharts\r\n                    className=\"box\"\r\n                    option={option}\r\n                    notMerge={true}\r\n                    lazyUpdate={true}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// 获取近七日时间数组\r\nconst getSevenDay = () => {\r\n    let array = []\r\n    for(let i=-6;i<1;i++) {\r\n        array.push(getDay(i) + \" 00:00:00\")\r\n    }\r\n    return array;\r\n}\r\n\r\nconst doHandleMonth = (month) => {\r\n    let m = month;\r\n    if(month.toString().length === 1){\r\n     m = \"0\" + month;\r\n    }\r\n    return m;\r\n}\r\n\r\nconst getDay = (day) => {\r\n    let today = new Date();\r\n    var targetday_milliseconds=today.getTime() + 1000*60*60*24*day;\r\n    today.setTime(targetday_milliseconds); //注意，这行是关键代码\r\n    var tYear = today.getFullYear();\r\n    var tMonth = today.getMonth();\r\n    var tDate = today.getDate();\r\n    tMonth = doHandleMonth(tMonth + 1);\r\n    tDate = doHandleMonth(tDate);\r\n    return tYear+\"-\"+tMonth+\"-\"+tDate;\r\n}\r\n\r\nexport {\r\n    getSevenDay,\r\n    getDay\r\n}","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport Chart from '../../components/chart'\r\nimport { Pagination } from 'antd';\r\nimport {\r\n    reqGetAreaDayAmount,\r\n    reqGetAreaPage\r\n} from '../../api/index'\r\nimport { getSevenDay } from '../../config/publicConfig'\r\n\r\nexport default class BossBill extends Component {\r\n\r\n    state = {\r\n        areaId: \"\",\r\n        total: \"\",\r\n        current: 1,\r\n        areaList: [],\r\n        xData: [],\r\n        yData: []\r\n    }\r\n\r\n    // 初始化 获取区域列表\r\n    UNSAFE_componentWillMount = async () => {\r\n        return new Promise(async resolve => {\r\n            let res = await reqGetAreaPage({ 'page': 1, 'size': 5 });\r\n            this.setState({\r\n                areaList: res.data.data,\r\n                areaId: res.data.data[0].areaId,\r\n                total: res.data.total\r\n            })\r\n            if(res.code===1) resolve(res.data.data[0].areaId)\r\n        }).then((id)=>this.getAreaDayAmount(id))\r\n    }\r\n\r\n    // 选择区域\r\n    handleChangeArea = (item) => {\r\n        this.setState({ areaId: item.areaId })\r\n        this.getAreaDayAmount(item.areaId)\r\n    }\r\n\r\n    // 获取该区域流水\r\n    getAreaDayAmount = async (id) => {\r\n        let array = getSevenDay()\r\n        const data = {\r\n            areaId: id,\r\n            dates: array\r\n        }\r\n        let res = await reqGetAreaDayAmount(data)\r\n        if (res.code === 1) {\r\n            this.handleBillList(res.data)\r\n        }\r\n    }\r\n\r\n    // 处理流水数组\r\n    handleBillList = (list) => {\r\n        let x = new Array(7)\r\n        let y = new Array(7)\r\n        if(list.length===0) return;\r\n        for (let i = 0; i < 7; i++) {\r\n            x[i] = list[i].dayTime.slice(5, 10)\r\n            y[i] = list[i].amount\r\n        }\r\n        this.setState({\r\n            xData: x,\r\n            yData: y\r\n        })\r\n    }\r\n\r\n    // 分页\r\n    handlePageChange = async (page, size) => {\r\n        const data = {\r\n            page: page,\r\n            size: size\r\n        }\r\n\r\n        let res = await reqGetAreaPage(data)\r\n        this.setState({\r\n            current: page,\r\n            areaList: res.data.data,\r\n            total: res.data.total\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bossBill\">\r\n                <div className=\"topBox\">\r\n                    <p>区域选择</p>\r\n                    <div className=\"areaBox\">\r\n                        {\r\n                            this.state.areaList.map((item, index) => {\r\n                                return <div onClick={this.handleChangeArea.bind(this, item)} key={index} className={item.areaId === this.state.areaId ? \"areaItem areaItemClick\" : \"areaItem\"}>\r\n                                    <span>区域名称：{item.areaName}</span><br />\r\n                                    <span>区域编号：{item.areaId}</span>\r\n                                </div>\r\n                            }, this)\r\n                        }\r\n                    </div>\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        current={this.state.current}\r\n                        total={this.state.total}\r\n                        defaultCurrent={1}\r\n                        defaultPageSize={5}\r\n                        pageSize={5}\r\n                        onChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n                <Chart className=\"bottomBox\" xData={this.state.xData} yData={this.state.yData}></Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport './index.less';\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav';\r\nimport HeaderTop from '../../components/header';\r\nimport BossArea from '../bossArea';\r\nimport BossAccount from '../bossAccount';\r\nimport BossBill from '../bossBill'\r\nimport { menuData } from '../../config/bossConfig';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class Boss extends Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"bossMain\">\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                    <LeftNav list={menuData}/>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <HeaderTop history={this.props.history} collapsed={this.state.collapsed} toggle={() => {this.toggle()}} />\r\n                    <Content className=\"site-layout-content\">\r\n                        <Switch>\r\n                            <Route path='/boss/area' component={BossArea} />\r\n                            <Route path='/boss/account' component={BossAccount} />\r\n                            <Route path='/boss/bill' component={BossBill} />\r\n                            <Redirect from=\"/boss\" to=\"/boss/area\" />\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import {\r\n    CarOutlined,\r\n    UserOutlined,\r\n    BarChartOutlined,\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst menuData = [\r\n    {\r\n        key: 1,\r\n        icon: <CarOutlined />,\r\n        name: \"停车场管理\",\r\n        path: '/admin/parking'\r\n    },\r\n    {\r\n        key: 2,\r\n        icon: <UserOutlined />,\r\n        name: \"账号管理\",\r\n        path: '/admin/account'\r\n    },\r\n    {\r\n        key: 3,\r\n        icon: <BarChartOutlined />,\r\n        name: \"流水账单\",\r\n        path: '/admin/bill'\r\n    },\r\n]\r\n\r\nconst adminParkColumns = [\r\n    {\r\n        title: '停车场编号',\r\n        dataIndex: 'parkId',\r\n        key: 'parkId',\r\n        width: '120px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '停车场名称',\r\n        dataIndex: 'parkName',\r\n        key: 'parkName',\r\n        width: '240px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '经度',\r\n        dataIndex: 'lng',\r\n        key: 'lng',\r\n        width: '100px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '纬度',\r\n        dataIndex: 'lat',\r\n        key: 'lat',\r\n        width: '100px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '车位数',\r\n        dataIndex: 'placeNum',\r\n        key: 'placeNum',\r\n        width: '100px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        filters: [\r\n            { text: '正常', value: '1' },\r\n            { text: '维修中', value: '0' },\r\n          ],\r\n        width: '100px',\r\n        align: 'center',\r\n    },\r\n    {\r\n        title: '编辑资料',\r\n        key: 'action',\r\n        width: '200px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n        render: (text, record) => (\r\n            <EditOutlined />\r\n        ),\r\n      },\r\n]\r\n\r\nexport { menuData,adminParkColumns };","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Table, Input, Button, Modal, message, Form } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {\r\n    reqCreatePark,\r\n    reqGetAreaParkPage,\r\n} from '../../api/index'\r\n\r\nimport { adminParkColumns } from '../../config/adminConfig'\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class AdminParking extends Component {\r\n\r\n    state = {\r\n        current: 1,\r\n        defaultPageSize: 7,\r\n        pageSize: 7,\r\n        visible: false,\r\n        isLoading: false,\r\n        tableData: [],\r\n        total: 0\r\n    }\r\n\r\n    // 获取区域列表\r\n    UNSAFE_componentWillMount = () => {\r\n        this.handlePageChange()\r\n        \r\n    }\r\n\r\n    //todo 解决bug的 不需要就删掉\r\n    componentWillUnmount = () => {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n\r\n    //todo 搜索\r\n    onSearch = async (value) => {\r\n        // console.log(value)\r\n       \r\n    }\r\n\r\n    // 添加区域\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n \r\n    handleOk = async (values) => {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n\r\n        let res = await reqCreatePark(values);\r\n        if(res.msg === 'success') {\r\n            this.setState({\r\n                isLoading: false,\r\n                visible: false\r\n            })\r\n            message.success('添加成功！')\r\n            this.handlePageChange()\r\n        }else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            message.warn(res.msg)\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            isLoading: false\r\n        })\r\n        message.info('取消添加。')\r\n    }\r\n\r\n    // 分页\r\n    handlePageChange = async (page=1, pageSize=7) => {\r\n        const data = {\r\n            page: page,\r\n            size: pageSize\r\n        }\r\n        let res = await reqGetAreaParkPage(data);\r\n        this.setState({\r\n            current: page,\r\n            tableData: res.data.data,\r\n            total: res.data.total\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"adminArea\">\r\n                <div className=\"topBox\">\r\n                    <Button onClick={this.showModal} icon={<PlusOutlined />}>添加停车场</Button>\r\n                    <Search placeholder=\"请输入停车场名称或者ID\" onSearch={this.onSearch} style={{ width: 200 }} />\r\n                    <Modal\r\n                        title=\"添加停车场\"\r\n                        visible={this.state.visible}\r\n                        centered={true}\r\n                        footer={null}\r\n                        closable={false}\r\n                    >\r\n                        <Form\r\n                            name=\"parkForm\"\r\n                            labelCol={{ span: 6 }}\r\n                            wrapperCol={{ span: 16 }}\r\n                            initialValues={{ remember: false }}\r\n                            onFinish={this.handleOk}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"停车场编号\"\r\n                                name=\"parkId\"\r\n                                rules={[{ required: true, message: '请输入停车场编号！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"停车场名称\"\r\n                                name=\"parkName\"\r\n                                rules={[{ required: true, message: '请输入停车场名称！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"经度\"\r\n                                name=\"lng\"\r\n                                rules={[{ required: true, message: '请输入经度！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"纬度\"\r\n                                name=\"lat\"\r\n                                rules={[{ required: true, message: '请输入纬度称！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button onClick={this.handleCancel}>\r\n                                    取消\r\n                                </Button>\r\n                                <Button type=\"primary\" loading={this.state.isLoading} htmlType=\"submit\" style={{marginLeft: '20px'}}>\r\n                                    添加\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n                <Table\r\n                    columns={adminParkColumns}\r\n                    dataSource={this.state.tableData}\r\n                    rowKey={columns => columns.arrayId} \r\n                    pagination={{\r\n                        current: this.state.current,\r\n                        total: this.state.total,\r\n                        defaultCurrent: 1,\r\n                        defaultPageSize: this.state.defaultPageSize,\r\n                        pageSize: this.state.pageSize,\r\n                        onChange: this.handlePageChange\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Button, Input, Form, Modal, message } from 'antd'\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons'\r\nimport {\r\n    reqGetAreaParkPage,\r\n    reqCreateParkAdmin,\r\n    reqGetParkAdmin\r\n} from '../../api/index'\r\n\r\nexport default class BossAccount extends Component {\r\n\r\n    state = {\r\n        parkId: \"0\",\r\n        parkName: \"\",\r\n        visible: false,\r\n        isLoading: false,\r\n        parkList: [],\r\n        guardList: []\r\n    }\r\n\r\n    // 获取区域列表\r\n    UNSAFE_componentWillMount = async () => {\r\n        return new Promise(async resolve=>{\r\n            let res = await reqGetAreaParkPage({ 'page': 1, 'size': 1000 });\r\n            let list = await reqGetParkAdmin({ 'parkId': res.data.data[0].parkId })\r\n            this.setState({\r\n                parkList: res.data.data,\r\n                parkId: res.data.data[0].parkId,\r\n                guardList: list.data\r\n            })\r\n        })\r\n    }\r\n   \r\n    // 获取区域管理员\r\n    getAreaAdmin = async () => {\r\n        let res = await reqGetParkAdmin({ 'parkId': this.state.parkId })\r\n        this.setState({\r\n            guardList: res.data\r\n        })\r\n    }\r\n\r\n    //todo 选择区域\r\n    handleChangeArea = (item) => {\r\n        this.setState({\r\n            parkId:item.parkId\r\n        }, () => {\r\n            this.getAreaAdmin()\r\n        })\r\n    }\r\n\r\n    // 添加区域管理员\r\n    showModal = () => {\r\n        this.setState({\r\n            visible:true\r\n        })\r\n    }\r\n//todo\r\n    handleOk = async  (values) => {\r\n        console.log(values);\r\n        this.setState({ isLoading: true})\r\n        let res = await reqCreateParkAdmin(values)\r\n        if(res.msg === 'success') {\r\n            this.setState({\r\n                isLoading: false,\r\n                visible: false\r\n            })\r\n            message.success('添加保安成功！')\r\n            this.getAreaAdmin();\r\n        }else{\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            message.warn(res.msg)\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            isLoading: false\r\n        })\r\n        message.info('取消添加。')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"adminAccount\">\r\n                <div className=\"itemBox leftBox\">\r\n                    {\r\n                        this.state.parkList.map((item,index) => {\r\n                            return <div onClick={this.handleChangeArea.bind(this, item)} key={index} className={item.parkId === this.state.parkId ? \"areaItem areaItemClick\" : \"areaItem\"}>\r\n                                <p>停车场名称：{item.parkName}</p>\r\n                                <p>停车场编号：{item.parkId}</p>\r\n                            </div>\r\n                        }, this)\r\n                    }\r\n                </div>\r\n                <div className=\"itemBox rightBox\">\r\n                    <Button onClick={this.showModal} className=\"addBtn\" icon={<PlusOutlined />}>添加保安</Button>\r\n                    <Modal\r\n                        title=\"添加保安\"\r\n                        visible={this.state.visible}\r\n                        centered={true}\r\n                        footer={null}\r\n                        closable={false}\r\n                    >\r\n                        <Form\r\n                            name=\"guardForm\"\r\n                            labelCol={{ span: 6 }}\r\n                            wrapperCol={{ span: 16 }}\r\n                            initialValues={{ remember: false }}\r\n                            onFinish={this.handleOk}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item\r\n                                label=\"停车场编号\"\r\n                                name=\"parkId\"\r\n                                rules={[{ required: true, message: '请输入停车场编号！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"保安姓名\"\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: '请输入姓名！' }]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"密码\"\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: '请输入初始密码！' }]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button onClick={this.handleCancel}>\r\n                                    取消\r\n                                </Button>\r\n                                <Button type=\"primary\" loading={this.state.isLoading} htmlType=\"submit\" style={{ marginLeft: '20px' }}>\r\n                                    添加\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                    <div className=\"guardBox\">\r\n                        {\r\n                            this.state.guardList.map((item,index) => {\r\n                                return <div className=\"guardItem\" key={index}>\r\n                                    <span className=\"guardSpan\">管理员：{item.username}</span>\r\n                                    <span style={{color: item.status===0?'#ff4e50':'#648cb9'}}>{item.status===0? '已冻结':'正常'}</span>\r\n                                    <Button shape=\"circle\" danger size=\"small\" icon={<MinusOutlined />} />\r\n                                </div>\r\n                            },this)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport Chart from '../../components/chart'\r\nimport { Pagination } from 'antd';\r\nimport {\r\n    reqGetParkDayAmount,\r\n    reqGetAreaParkPage\r\n} from '../../api/index'\r\nimport { getSevenDay } from '../../config/publicConfig'\r\n\r\nexport default class BossBill extends Component {\r\n\r\n    state = {\r\n        parkId: \"\",\r\n        total: \"\",\r\n        current: 1,\r\n        parkList: [],\r\n        xData: [],\r\n        yData: []\r\n    }\r\n\r\n    // 初始化 获取区域列表\r\n    UNSAFE_componentWillMount = async () => {\r\n        return new Promise(async resolve => {\r\n            let res = await reqGetAreaParkPage({ 'page': 1, 'size': 5 });\r\n\r\n            if (res.code === 1) {\r\n                this.setState({\r\n                    parkList: res.data.data,\r\n                    parkId: res.data.data[0].parkId,\r\n                    total: res.data.total\r\n                })\r\n                resolve(res.data.data[0].parkId)\r\n            }\r\n        }).then((id) => this.getParkDayAmount(id))\r\n    }\r\n\r\n    // 选择区域\r\n    handleChangeArea = (item) => {\r\n        this.setState({ parkId: item.parkId })\r\n        this.getParkDayAmount(item.parkId)\r\n    }\r\n\r\n    // 获取该区域流水\r\n    getParkDayAmount = async (id) => {\r\n        let array = getSevenDay()\r\n        const data = {\r\n            parkId: id,\r\n            dates: array\r\n        }\r\n        let res = await reqGetParkDayAmount(data)\r\n        if (res.code === 1) {\r\n            this.handleBillList(res.data)\r\n        }\r\n    }\r\n\r\n    // 处理流水数组\r\n    handleBillList = (list) => {\r\n        let x = new Array(7)\r\n        let y = new Array(7)\r\n        if (list.length === 0) return;\r\n        for (let i = 0; i < 7; i++) {\r\n            x[i] = list[i].dayTime.slice(5, 10)\r\n            y[i] = list[i].amount\r\n        }\r\n        this.setState({\r\n            xData: x,\r\n            yData: y\r\n        })\r\n    }\r\n\r\n    // 分页\r\n    handlePageChange = async (page, size) => {\r\n        const data = {\r\n            page: page,\r\n            size: size\r\n        }\r\n\r\n        let res = await reqGetAreaParkPage(data)\r\n        this.setState({\r\n            current: page,\r\n            parkList: res.data.data,\r\n            total: res.data.total\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"adminBill\">\r\n                <div className=\"topBox\">\r\n                    <p>停车场选择</p>\r\n                    <div className=\"parkBox\">\r\n                        {\r\n                            this.state.parkList.map((item, index) => {\r\n                                return <div onClick={this.handleChangeArea.bind(this, item)} key={index} className={item.parkId === this.state.parkId ? \"parkItem parkItemClick\" : \"parkItem\"}>\r\n                                    <span>名称：{item.parkName}</span>\r\n                                    <span>停车场编号：{item.parkId}</span>\r\n                                </div>\r\n                            }, this)\r\n                        }\r\n                    </div>\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        current={this.state.current}\r\n                        total={this.state.total}\r\n                        defaultCurrent={1}\r\n                        defaultPageSize={5}\r\n                        pageSize={5}\r\n                        onChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n                <Chart className=\"bottomBox\" xData={this.state.xData} yData={this.state.yData}></Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport './index.less';\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav';\r\nimport HeaderTop from '../../components/header';\r\nimport AdminParking from '../adminParking';\r\nimport AdminAccount from '../adminAccount';\r\nimport AdminBill from '../adminBill';\r\nimport { menuData } from '../../config/adminConfig';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"adminMain\">\r\n                 <Layout className=\"bossMain\">\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                    <LeftNav list={menuData}/>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <HeaderTop history={this.props.history} collapsed={this.state.collapsed} toggle={() => {this.toggle()}} />\r\n                    <Content className=\"site-layout-content\">\r\n                        <Switch>\r\n                            <Route path='/admin/parking' component={AdminParking} />\r\n                            <Route path='/admin/account' component={AdminAccount} />\r\n                            <Route path='/admin/bill' component={AdminBill} />\r\n                            <Redirect from=\"/admin\" to=\"/admin/parking\" />\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Button, message, Modal, Form, Input, Pagination } from 'antd';\r\nimport { PlusOutlined, LockOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport {\r\n    reqFreezePark,\r\n    reqUnfreezePark,\r\n    reqCreatePlace,\r\n    reqGetPlacePage\r\n} from '../../api/index'\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class GuardStall extends Component {\r\n\r\n    state = {\r\n        visible: false,\r\n        isLoading: false,\r\n        current: 1,\r\n        total: \"60\",\r\n        placeList: []\r\n    }\r\n\r\n    //todo 获取信息\r\n    UNSAFE_componentWillMount = () => {\r\n       this.handlePageChange()\r\n    }\r\n\r\n    // 冻结停车场\r\n    freezePark = async () => {\r\n        let res = await reqFreezePark();\r\n        if(res.code === 1) {\r\n            message.success('冻结停车场成功！')\r\n        }else {\r\n            message.warn('冻结失败，请稍后重试。')\r\n        }\r\n    }\r\n\r\n    // 解冻停车场\r\n    unfreezePark = async () => {\r\n        let res = await reqUnfreezePark();\r\n        if(res.code === 1) {\r\n            message.success('解冻停车场成功！')\r\n        }else {\r\n            message.warn('解冻失败，请稍后重试。')\r\n        }\r\n    }\r\n\r\n\r\n    //todo 添加停车位\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    handleOk = async (values) => {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n\r\n        let res = await reqCreatePlace(values);\r\n        if(res.msg === 'success') {\r\n            this.setState({\r\n                isLoading: false,\r\n                visible: false\r\n            })\r\n            message.success('添加成功！')\r\n            this.handlePageChange()\r\n        }else {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            message.warn(res.msg)\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            isLoading: false\r\n        })\r\n        message.info('取消添加。')\r\n    }\r\n\r\n    //todo 搜索\r\n    onSearch = async (value) => {\r\n        // console.log(value)\r\n    }\r\n\r\n    // 分页\r\n    handlePageChange = async (page = 1, pageSize = 10) => {\r\n        const data = {\r\n            page: page,\r\n            size: pageSize\r\n        }\r\n        let res = await reqGetPlacePage(data);\r\n        this.setState({\r\n            current: page,\r\n            placeList: res.data.data,\r\n            total: res.data.total\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div className=\"guardStall\">\r\n                <div className=\"topBox\">\r\n                    <div className=\"topLeftBox\">\r\n                        <Button onClick={this.freezePark} danger type=\"primary\" icon={<LockOutlined />}>冻结停车场</Button>\r\n                        <Button onClick={this.unfreezePark} type=\"primary\" icon={<UnlockOutlined />} style={{marginLeft:'20px'}}>解冻停车场</Button>\r\n                    </div>\r\n                    <div className=\"topRightBox\">\r\n                        <Button onClick={this.showModal} icon={<PlusOutlined />} style={{marginRight:'20px'}}>添加停车位</Button>\r\n                        <Search placeholder=\"请输入停车位编号或者经纬度\" onSearch={this.onSearch} style={{ width: 200 }} />\r\n                        <Modal\r\n                            title=\"添加停车位\"\r\n                            visible={this.state.visible}\r\n                            centered={true}\r\n                            footer={null}\r\n                            closable={false}\r\n                        >\r\n                            <Form\r\n                                name=\"placeForm\"\r\n                                labelCol={{ span: 6 }}\r\n                                wrapperCol={{ span: 16 }}\r\n                                initialValues={{ remember: false }}\r\n                                onFinish={this.handleOk}\r\n                                autoComplete=\"off\"\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"停车位编号\"\r\n                                    name=\"placeNumber\"\r\n                                    rules={[{ required: true, message: '请输入停车位编号！' }]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"经度\"\r\n                                    name=\"lng\"\r\n                                    rules={[{ required: true, message: '请输入经度！' }]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"纬度\"\r\n                                    name=\"lat\"\r\n                                    rules={[{ required: true, message: '请输入纬度！' }]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                    <Button onClick={this.handleCancel}>\r\n                                        取消\r\n                                    </Button>\r\n                                    <Button type=\"primary\" loading={this.state.isLoading} htmlType=\"submit\" style={{ marginLeft: '20px' }}>\r\n                                        添加\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bottomBox\">\r\n                    <div className=\"listBox\">\r\n                        {\r\n                            this.state.placeList.map((item,index) => {\r\n                                return <div className=\"itemBox\" key={index}>\r\n                                    <p>车位号：{item.placeNumber}</p>\r\n                                    <p>经度：{item.lng}</p>\r\n                                    <p>纬度：{item.lat}</p>\r\n                                    <p>状态：{item.isOccupied===0? \"空闲\":\"使用中\"}</p>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        current={this.state.current}\r\n                        total={this.state.total}\r\n                        defaultCurrent={1}\r\n                        defaultPageSize={10}\r\n                        pageSize={10}\r\n                        onChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {\r\n    CarOutlined,\r\n    ContainerOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst menuData = [\r\n    {\r\n        key: 1,\r\n        icon: <CarOutlined />,\r\n        name: \"车位管理\",\r\n        path: '/guard/stall'\r\n    },\r\n    {\r\n        key: 2,\r\n        icon: <ContainerOutlined />,\r\n        name: \"记录管理\",\r\n        path: '/guard/log'\r\n    },\r\n]\r\n\r\nconst guardLogColumns = [\r\n    {\r\n        title: '用户ID',\r\n        dataIndex: 'openId',\r\n        key: 'openId',\r\n        width: '200px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '开始时间',\r\n        dataIndex: 'startTime',\r\n        key: 'startTime',\r\n        width: '150px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '结束时间',\r\n        dataIndex: 'endTime',\r\n        key: 'endTime',\r\n        width: '150px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n    {\r\n        title: '收费',\r\n        dataIndex: 'cost',\r\n        key: 'cost',\r\n        width: '100px',\r\n        align: 'center',\r\n        ellipsis: true,\r\n    },\r\n]\r\n\r\nexport { menuData, guardLogColumns };","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { Table, DatePicker } from 'antd';\r\nimport { guardLogColumns } from '../../config/guardConfig'\r\nimport { reqGetDayRecords } from '../../api'\r\nimport { getDay } from '../../config/publicConfig'\r\nimport moment from 'moment';\r\n\r\nexport default class GuardLog extends Component {\r\n\r\n    state = {\r\n        current: 1,\r\n        total: 0,\r\n        defaultPageSize: 9,\r\n        pageSize: 9,\r\n        date: \"\",\r\n        tableData: []\r\n    }\r\n\r\n    //todo 开始\r\n    UNSAFE_componentWillMount = () => {\r\n        this.setState({\r\n            date: getDay(0) + \" 00:00:00\"\r\n        }, () => this.handlePageChange())\r\n       \r\n    }\r\n\r\n    // 选择日期\r\n    handleDateChange = (date,dateString) => {\r\n        this.setState({\r\n            date: dateString + \" 00:00:00\"\r\n        }, () => this.handlePageChange())\r\n    }\r\n\r\n    //todo 分页\r\n    handlePageChange = async (page=1, pageSize=this.state.pageSize) => {\r\n        const data = {\r\n            page: page,\r\n            size: pageSize,\r\n            date: this.state.date\r\n        }\r\n        let res = await reqGetDayRecords(data)\r\n        this.setState({\r\n            current:page,\r\n            tableData: res.data.data,\r\n            total:res.data.total\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let day = getDay(0)\r\n\r\n        return (\r\n            <div className=\"guardLog\">\r\n                <DatePicker defaultValue={moment(day,'YYYY-MM-DD')} onChange={this.handleDateChange} />\r\n                <Table\r\n                    className=\"table\"\r\n                    size=\"middle\"\r\n                    columns={guardLogColumns}\r\n                    dataSource={this.state.tableData}\r\n                    rowKey={columns => columns.openId} \r\n                    pagination={{\r\n                        current: this.state.current,\r\n                        total: this.state.total,\r\n                        defaultCurrent: 1,\r\n                        defaultPageSize: this.state.defaultPageSize,\r\n                        pageSize: this.state.pageSize,\r\n                        onChange: this.handlePageChange\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport './index.less';\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav';\r\nimport HeaderTop from '../../components/header';\r\nimport GuardStall from '../guardStall';\r\nimport GuardLog from '../guardLog';\r\nimport { menuData } from '../../config/guardConfig';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nexport default class Guard extends Component {\r\n\r\n    state = {\r\n        collapsed: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"guardMain\">\r\n                <Layout className=\"bossMain\">\r\n                    <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                        <LeftNav list={menuData} />\r\n                    </Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        <HeaderTop history={this.props.history} collapsed={this.state.collapsed} toggle={() => { this.toggle() }} />\r\n                        <Content className=\"site-layout-content\">\r\n                            <Switch>\r\n                                <Route path='/guard/stall' component={GuardStall} />\r\n                                <Route path='/guard/log' component={GuardLog} />\r\n                                <Redirect from=\"/guard\" to=\"/guard/log\" />\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// 应用的根组件\r\nimport React, { Component } from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport Login from './pages/login'\r\nimport Boss from './pages/boss'\r\nimport Admin from './pages/admin'\r\nimport Guard from './pages/guard'\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/boss' component={Boss} />\r\n                    <Route path='/admin' component={Admin} />\r\n                    <Route path='/guard' component={Guard} />\r\n                    <Redirect from=\"/\" to=\"/guard\" />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n","// 项目入口\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}